# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-11-30 08:44
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('staff', '0001_initial'),
        ('core', '0001_initial'),
        ('kid', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('kid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kid.Kid')),
            ],
            options={
                'verbose_name': 'ClassRoom',
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
            ],
            options={
                'verbose_name': 'Customer Management',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('email', models.CharField(max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('tax_code', models.CharField(max_length=255, verbose_name='Tax Code')),
                ('kid_limit', models.IntegerField(default=0, verbose_name='Kid Limit')),
                ('teacher_limit', models.IntegerField(default=0, verbose_name='Teacher Limit')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='Organization/Avatar', verbose_name='Avatar')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_organization_created_by', to='staff.Staff')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_organization_modified_by', to='staff.Staff')),
            ],
            options={
                'verbose_name': 'Customer Organization',
            },
        ),
        migrations.CreateModel(
            name='OrganizationPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('order_id', models.CharField(max_length=100, verbose_name='Order ID')),
                ('expiry_date', models.DateTimeField(verbose_name='Expiry Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Organization')),
            ],
            options={
                'verbose_name': 'Organization Package',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Decription')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('effective_time', models.IntegerField(default=0, verbose_name='Effective Time')),
                ('is_trial', models.BooleanField(default=False, verbose_name='Trial')),
                ('kid_limit_default', models.IntegerField(default=0, verbose_name='Kid Limit Default')),
                ('teacher_limit_default', models.IntegerField(default=0, verbose_name='Teacher Limit Default')),
                ('status', django_fsm.FSMField(default='draft', max_length=50)),
            ],
            options={
                'verbose_name': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='PackageOrganizationBookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('book_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BookCategory')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Package')),
            ],
            options={
                'verbose_name': 'Package Book Category',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('username', models.CharField(max_length=255, verbose_name='User Name')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('dob', models.DateTimeField(blank=True, null=True, verbose_name='Created Date')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('personal_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Personal Id')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='Parent/Avatar', verbose_name='Avatar')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Parent Organization',
            },
        ),
        migrations.CreateModel(
            name='ParentKid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('kid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kid.Kid')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Parent')),
            ],
            options={
                'verbose_name': 'Customer  Package',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, verbose_name='User Name')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('dob', models.DateTimeField(blank=True, null=True, verbose_name='Created Date')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('personal_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Personal Id')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='Teacher/Avatar', verbose_name='Avatar')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('kids', models.ManyToManyField(blank=True, related_name='teacher_kid_rel', through='organization.ClassRoom', to='kid.Kid')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Organization')),
            ],
            options={
                'verbose_name': 'Teacher',
            },
        ),
        migrations.AddField(
            model_name='parent',
            name='kids',
            field=models.ManyToManyField(blank=True, through='organization.ParentKid', to='kid.Kid'),
        ),
        migrations.AddField(
            model_name='parent',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Organization'),
        ),
        migrations.AddField(
            model_name='package',
            name='book_categories',
            field=models.ManyToManyField(blank=True, related_name='rel_package_organization_m2m_book_category', through='organization.PackageOrganizationBookCategory', to='core.BookCategory'),
        ),
        migrations.AddField(
            model_name='package',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_package_created_by', to='staff.Staff'),
        ),
        migrations.AddField(
            model_name='package',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_package_modified_by', to='staff.Staff'),
        ),
        migrations.AddField(
            model_name='organizationpackage',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Package'),
        ),
        migrations.AddField(
            model_name='organization',
            name='packages',
            field=models.ManyToManyField(blank=True, through='organization.OrganizationPackage', to='organization.Package'),
        ),
        migrations.AddField(
            model_name='organization',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_organization_rel', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='management',
            name='organization',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='organization.Organization'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='parentkid',
            unique_together=set([('parent', 'kid')]),
        ),
        migrations.AlterUniqueTogether(
            name='packageorganizationbookcategory',
            unique_together=set([('package', 'book_category')]),
        ),
    ]
